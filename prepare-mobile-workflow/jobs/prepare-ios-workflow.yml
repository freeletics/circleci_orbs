description: |
  Prepares CI workflow for iOS builds later in this workflow. Followup jobs
  should not do any checkout, but attach workspace and restore gem cache.

parameters:
  git_cache_version:
    description: "Git cache key (example \"v6\"). Could be used to invalidate cache."
    type: string
    default: "v6"
  gem_cache_version:
    description: "Gem cache key (example \"v14\"). Could be used to invalidate cache."
    type: string
    default: "v14"
  cache_modifier:
    description: "Optional caches modifier. Useful to create several caches for the same dependencies file."
    type: string
    default: "ios"
  gemlock_file:
    description: "Path to the Gemfile.lock file that defines all gem dependencies and their versions."
    type: string
    default: '"Gemfile.lock"'
  sync_dependencies:
    description: "Steps to sync gem dependencies."
    type: steps
    default: []
  post-checkout-additional-steps:
    description: "Optional steps to perform after checkout, but before saving to workspace."
    type: steps
    default: []
  ruby_version:
    description: "Version of ruby to use."
    type: string
    default: "2.7.0"
  bundler_path:
    description: "Path to store installed gems, default to 'vendor/bundle/<ruby-version>'"
    type: string
    default: vendor/bundle/2.7
  bundler_version:
    description: "Bundler version to install."
    type: string
    default: "2.2.8"
  working_directory:
    type: string
    default: /home/circleci/repo

executor:
  name: ruby-git-small
  working_directory: << parameters.working_directory >>
  ruby_version: << parameters.ruby_version >>
  bundler_version: << parameters.bundler_version >>
  bundler_path: << parameters.bundler_path >>

steps:
  - checkout-from-git-cache:
      cache_version: << parameters.git_cache_version >>
  - run:
      name: Removing .git folder
      command: rm -rf .git/
  - steps: << parameters.post-checkout-additional-steps >>
  - restore-gems-cache:
      cache_version: << parameters.gem_cache_version >>
      cache_modifier: << parameters.cache_modifier >>
      gemlock_file: << parameters.gemlock_file >>
  - run:
      name: Install bundler
      command: |
            gem install --user-install bundler --version << parameters.bundler_version >>
            bundle config path << parameters.bundler_path >>
  - steps: << parameters.sync_dependencies >>
  - save-gems-cache:
      cache_version: << parameters.gem_cache_version >>
      cache_modifier: << parameters.cache_modifier >>
      gemlock_file: << parameters.gemlock_file >>
      bundler_path: << parameters.bundler_path >>
  - persist_to_workspace:
      root: .
      paths:
        - .
